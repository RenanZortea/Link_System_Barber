import {
  CartesianContext,
  DrawingContext,
  SeriesContext,
  SvgContext,
  isBandScale
} from "./chunk-GHO7DQJL.js";
import {
  require_react
} from "./chunk-XLKA4T3M.js";
import {
  __toESM
} from "./chunk-WXXH56N5.js";

// node_modules/@mui/x-charts/esm/hooks/useChartId.js
var React = __toESM(require_react());
function useChartId() {
  const {
    chartId
  } = React.useContext(DrawingContext);
  return React.useMemo(() => chartId, [chartId]);
}

// node_modules/@mui/x-charts/esm/hooks/useScale.js
var React2 = __toESM(require_react());
function getValueToPositionMapper(scale) {
  if (isBandScale(scale)) {
    return (value) => scale(value) + scale.bandwidth() / 2;
  }
  return (value) => scale(value);
}
function useXScale(identifier) {
  const {
    xAxis,
    xAxisIds
  } = React2.useContext(CartesianContext);
  const id = typeof identifier === "string" ? identifier : xAxisIds[identifier ?? 0];
  return xAxis[id].scale;
}
function useYScale(identifier) {
  const {
    yAxis,
    yAxisIds
  } = React2.useContext(CartesianContext);
  const id = typeof identifier === "string" ? identifier : yAxisIds[identifier ?? 0];
  return yAxis[id].scale;
}

// node_modules/@mui/x-charts/esm/hooks/useSvgRef.js
var React3 = __toESM(require_react());
function useSvgRef() {
  const svgRef = React3.useContext(SvgContext);
  if (svgRef === void 0) {
    throw new Error(["MUI X: Could not find the svg ref context.", "It looks like you rendered your component outside of a ChartsContainer parent component."].join("\n"));
  }
  return svgRef;
}

// node_modules/@mui/x-charts/esm/hooks/useSeries.js
var React4 = __toESM(require_react());
function useSeries() {
  const series = React4.useContext(SeriesContext);
  if (series === void 0) {
    throw new Error(["MUI X: Could not find the series ref context.", "It looks like you rendered your component outside of a ChartsContainer parent component."].join("\n"));
  }
  return series;
}
function usePieSeries() {
  const series = useSeries();
  return React4.useMemo(() => series.pie, [series.pie]);
}
function useLineSeries() {
  const series = useSeries();
  return React4.useMemo(() => series.line, [series.line]);
}
function useBarSeries() {
  const series = useSeries();
  return React4.useMemo(() => series.bar, [series.bar]);
}
function useScatterSeries() {
  const series = useSeries();
  return React4.useMemo(() => series.scatter, [series.scatter]);
}

export {
  useSeries,
  usePieSeries,
  useLineSeries,
  useBarSeries,
  useScatterSeries,
  useChartId,
  getValueToPositionMapper,
  useXScale,
  useYScale,
  useSvgRef
};
//# sourceMappingURL=chunk-HZX2TCVT.js.map
